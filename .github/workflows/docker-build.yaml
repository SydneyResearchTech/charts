name: Docker build
on:
  push:
    branches:
      - main
    paths:
      - build/**

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check:
    name: Check for changed Docker build files
    outputs:
      contexts: ${{ steps.check_files.outputs.contexts }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check files
        id: check_files
        run: |
          contexts=""
          delim=""
          while IFS= read -r file; do
            [[ $file == build/* ]] || continue
            context=$(echo $file |cut -d '/' -f 2)
            [ -z $context ] && continue
            [[ $context == ${contexts##*,} ]] && continue
            contexts="${contexts}${delim}\"${context}\""
            delim=", "
          done < <(git diff --name-only HEAD^ HEAD)
          echo "contexts=[${contexts}]" >> "$GITHUB_OUTPUT"

  build-and-push-image:
    if: ${{ needs.check.outputs.contexts != '' }}
    strategy:
      matrix:
        context: ${{ fromJSON(needs.check.outputs.contexts) }}
    needs:
      - check

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Docker image tag
        run: |
          TAG=$(sed -n 's/^ARG DOCKER_IMAGE_TAG=\(.*\)$/\1/p' build/${{ matrix.context }}/Dockerfile)
          if [ -z $TAG ]; then
            echo "DOCKER_IMAGE_TAG=0.1.0" >> "$GITHUB_ENV"
          else
            echo "DOCKER_IMAGE_TAG=${TAG}" >> "$GITHUB_ENV"
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          cache-from: type=registry,ref=ghcr.io/gohitech/${{ matrix.context }}:buildcache
          cache-to: type=registry,ref=ghcr.io/gohitech/${{ matrix.context }}:buildcache,mode=max
          context: build/${{ matrix.context }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/gohitech/${{ matrix.context }}:${{ env.DOCKER_IMAGE_TAG }}
