# Default values for orthanc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  postgresql:
    auth:
      username: "orthanc"
      database: "orthanc"
      existingSecret: ""
      secretKeys:
        adminPasswordKey: ""
        userPasswordKey: ""
        replicationPasswordKey: ""
  storageClassName: ""
  storageClass: ""

# The logical name of this instance of Orthanc. This one is displayed in Orthanc Explorer and at the URI "/system".
name: "Orthanc inside Docker"
# Path to the directory that holds the heavyweight files.
storageDirectory:
  path: "/var/lib/orthanc/db"
  existingVolumeClaim: ""
  persistentVolumeClaim:
    accessModes: [ReadWriteMany]
    size: 1Gi
    storageClassName: ""
# Path to the directory that holds the SQLite index.
indexDirectory: "/var/lib/orthanc/db"
# Path to the directory where Orthanc stores its large temporary files.
# The corresponding filesystem must be properly sized, given that for instance a ZIP
# archive of DICOM images created by a job can weight several GBs, and that there might be up to "min(JobsHistorySize,
# MediaArchiveSize)" archives to be stored simultaneously.
temporaryDirectory: "/tmp/orthanc"
# Enable the transparent compression of the DICOM instances.
storageCompression: false
# Maximum size of the storage in MB (a value of "0" indicates no limit on the storage size)
maximumStorageSize: 0
# Maximum number of patients that can be stored at a given time in the storage (a value of "0" indicates no limit on the number of patients)
maximumPatientCount: 0
# Action to take when the maximum storage is reached.
# In "Reject" mode, the sender will receive a 0xA700 DIMSE status code if the instance was sent through C-Store,
# a 507 HTTP status code if using the REST API and a 0xA700 Failure reason when using DicomWeb Stow-RS.
maximumStorageMode: Recycle
# Maximum size of the storage cache in MB.
# The storage cache is stored in RAM and contains a copy of recently accessed files (written or read).
# A value of "0" indicates the cache is disabled.
maximumStorageCacheSize: 128
# List of paths to the custom Lua scripts that are to be loaded into this instance of Orthanc
luaScripts: []
# The period (in seconds) between 2 calls of the "OnHeartBeat" lua callback.  O means the heart beat is disabled.
luaHeartBeatPeriod: 0

httpServer:
  enabled: true

remoteAccessAllowed: true
registeredUsers: {}
# alice: alicePassword

# https://orthanc.uclouvain.be/book/plugins.html
plugins:
  enabled: false
  python_enabled: false

authorization:
  enabled: false

# https://orthanc.uclouvain.be/book/plugins/dicomweb.html
DicomWeb:
  Enable: true
  Root: "/dicom-web/"
  EnableWado: true
  WadoRoot: "/wado"
  Ssl: false
  QidoCaseSensitive: true
  StudiesMetadata: Full
  SeriesMetadata: Full
  EnableMetadataCache: true
  MetadataWorkerThreadsCount: 4
  PublicRoot: "/dicom-web/"

# https://orthanc.uclouvain.be/book/plugins/postgresql.html
PostgreSQL:
  EnableIndex: true
  EnableStorage: false
  Host: ""
  Port: 5432
  Database: orthanc
  Username: orthanc
  Password: ""
  EnableSsl: false
  MaximumConnectionRetries: 10
  ConnectionRetryInterval: 5
  IndexConnectionsCount: 1
  TransactionMode: Serializable
  EnableVerboseLogs: false
  ConnectionUri: ""
  existingSecret: ""
  secretKeys:
    userPasswordKey: ""

# Sub-Chart Bitnami PostgreSQL RDBMS service
# helm show values oci://registry-1.docker.io/bitnamicharts/postgresql
postgresql:
  enabled: false
  auth:
    existingSecret: ""

# Special settings
verbose_startup: false
verbose_enabled: false
trace_enabled: false
no_jobs: false
malloc_arena_max: 1
before_orthanc_startup_script: ""

replicaCount: 1

image:
  repository: ghcr.io/sydneyresearchtech/orthanc
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001

securityContext:
  capabilities:
    drop:
    - ALL
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true

services:
  dicom:
    type: ClusterIP
    port: 4242
  http:
    type: ClusterIP
    port: 8042

service:
  type: ClusterIP
  port: 8042

ingress:
  enabled: false
  className: ""
  annotations: {}
    # cert-manager.io/cluster-issuer: selfsigned
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# livenessProbe:
#   exec:
#     command: ["/probes/test-aliveness.py","--user=healthcheck","--pwd=GASKEajSaz5f6j"]
# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector:
  kubernetes.io/arch: amd64
  kubernetes.io/os: linux

tolerations: []

affinity: {}
