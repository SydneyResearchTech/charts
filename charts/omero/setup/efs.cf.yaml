---
# https://docs.aws.amazon.com/eks/latest/userguide/efs-csi.html
# Create an Amazon EFS file system
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  EksClusterName:
    Type: String
    Description: EKS cluster name
  EksClusterVpcCidrBlock:
    Type: String
    Description: EKS cluster VPC CIDR block
  EksClusterVpcId:
    Type: String
    Description: EKS cluster VPC identifier
  EfsLCPTransitionToIA:
    Type: String
    Default: "AFTER_60_DAYS"
    Description: AWS EFS file transition to Infrequent Access

Resources:
  EfsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "EKS cluster access to EFS file system"
      GroupName: {Fn::Join: ["-", ["eks",{Ref: EksClusterName},"efs"]]}
      SecurityGroupIngress:
        - CidrIp: {Ref: EksClusterVpcCidrBlock}
          Description: Allow NFSv4 access to EKS cluster
          FromPort: 2049
          IpProtocol: tcp
          ToPort: 2049
      Tags: []
      VpcId: {Ref: EksClusterVpcId}

  EfsFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      #BackupPolicy: ""
      BypassPolicyLockoutSafetyCheck: false
      Encrypted: false
      #FileSystemPolicy: ""
      FileSystemTags:
        - {Key: "sydney.edu.au/organisationalUnit", Value: "Research Technology"}
        - {Key: "sydney.edu.au/ResTek/owner", Value: "dean.taylor@sydney.edu.au"}
        - {Key: "sydney.edu.au/ResTek/eksCluster", Value: {Ref: EksClusterName}}
      LifecyclePolicies:
        - TransitionToIA: {Ref: EfsLCPTransitionToIA}
        - TransitionToPrimaryStorageClass: "AFTER_1_ACCESS"
      PerformanceMode: generalPurpose
      #ProvisionedThroughputInMibps: 0.0
      ThroughputMode: bursting

  # TODO. Create Lambda backed custom resource
  # Loop over all required subnetIds and add mount target for EFS
  #EfsMountTarget1:
  #  Type: AWS::EFS::MountTarget
  #  Properties:
  #    FileSystemId: {Ref: EfsFileSystem}
  #    SecurityGroups: [Ref: EfsSecurityGroup]
  #    SubnetId: {Ref: EksClusterVpcSubnetID}

Outputs:
  EfsFileSystemId:
    Description: EFS file system identifier
    Value: {Ref: EfsFileSystem}
  EfsSecurityGroupId:
    Description: EFS security group identifier
    Value: {Fn::GetAtt: ["EfsSecurityGroup","GroupId"]}
