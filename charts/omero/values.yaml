# Default values for omero.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
## @section Global parameters
## Please, note that this will override the parameters, including dependencies, configured to use the global value
global:
  ## @param global.imageRegistry Global Docker image registryy
  ##
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""
  postgresql:
    auth:
      postgresPassword: ""
      username: "omero"
      password: "omero"
      database: "omero"
      existingSecret: ""
      secretKeys:
        adminPasswordKey: ""
        userPasswordKey: ""
        replicationPasswordKey: ""
    ## @param global.postgresql.service.ports.postgresql PostgreSQL service port (overrides `service.ports.postgresql`)
    ##
  service:
    ports:
      postgresql: ""

omero-server:
  enabled: true

  replicaCount: 1

  image:
    repository: omero-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

  podSecurityContext:
    fsGroup: 1000

  service:
    type: ClusterIP
    port: 80

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

## @section postgresql parameters
## Please reference [PostgreSQL packaged by Bitnami](https://github.com/bitnami/charts/tree/master/bitnami/postgresql/) for more details
##
postgresql:
  enabled: true
