---
# omero/charts/omero-web/templates/deployment.yaml
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "omero-web.fullname" . }}
  labels:
    {{- include "omero-web.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "omero-web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- if .Values.podAnnotations }}{{ toYaml . | nindent 8 }}{{ end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . |sha256sum }}
      {{- end }}
      labels:
        {{- include "omero-web.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "omero-web.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: omero-web
              containerPort: 4080
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          readinessProbe:
            httpGet:
              path: /
              port: omero-web
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: {{.Values.omeroLoadDir}}/00kubernetes-configmap.omero
              name: omero-config
              readOnly: true
              subPath: 00kubernetes-configmap.omero
            - mountPath: {{ .Values.omeroDir }}/var/static
              name: web-static
        - name: {{ .Chart.Name }}-static
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: nginx
          env:
            - {name: NGINX_PORT, value: "8080"}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/cache/nginx
              name: nginx-cache
            - mountPath: /var/run
              name: nginx-run
            #- mountPath: /etc/nginx/nginx.conf
            - mountPath: /usr/share/nginx/html/{{.Values.omero.web.static_url}}
              name: web-static
              readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: omero-config
          configMap:
            name: {{ include "omero-server.fullname" . }}
        - name: web-static
          emptyDir: {}
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
