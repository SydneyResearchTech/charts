apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "omero-server.fullname" . }}
  labels:
    {{- include "omero-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "omero-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations }}{{ toYaml .Values.podAnnotations | nindent 8 }}{{ end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . |sha256sum }}
      labels:
        {{- include "omero-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "omero-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          args: ["omero","admin","start","--foreground",{{ .Values.omeroDescriptor }},{{ .Values.omeroTargets }}]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "omero.postgresql.environmentVariables" . | nindent 12 }}
            {{- include "omero-server.environmentVariables" . | nindent 12 }}
            - name: ROOTPASS
              value: {{ include "omero-server.defaultRootPassword" . }}
          ports:
            #- name: jmx
            #  containerPort: 3001
            #  protocol: TCP
            - name: ice-router
              containerPort: 4063
              protocol: TCP
            - name: ice-router-ssl
              containerPort: 4064
              protocol: TCP
            - name: ice-router-ws
              containerPort: 4065
              protocol: TCP
            - name: ice-router-wss
              containerPort: 4066
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: ice-router
          readinessProbe:
            tcpSocket:
              port: ice-router
          startupProbe:
            tcpSocket:
              port: ice-router
            failureThreshold: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- include "omero-server.volumeMounts" . |nindent 12 }}
            - mountPath: /opt/omero/server/OMERO.server/var/log
              name: logs
            - mountPath: {{ .Values.omero.data.dir |quote }}
              name: omero-data-dir
            - mountPath: {{.Values.omeroLoadDir}}/00kubernetes-configmap.omero
              name: {{ include "omero-server.fullname" . }}-config
              readOnly: true
              subPath: 00kubernetes-configmap.omero
      {{- range $n,$p := .Values.omeroLogFiles }}
        - name: {{ $n }}-log
          image: busybox
          command: ["sh","-c"]
          args:
            - |
              exec tail -F -n 1000 "${LOG_FILE}"
          env:
            - {name: LOG_FILE, value: {{ $p }}}
          securityContext:
            {{- include "omero-server.securityContext" $ | nindent 12 }}
          volumeMounts:
            - mountPath: /opt/omero/server/OMERO.server/var/log
              name: logs
              readOnly: true
      {{- end }}
      initContainers:
        - name: init-pg-isready
          image: postgres
          command: ["sh","-c"]
          args:
            - |
              echo "waiting for database connection"
              until pg_isready; do sleep 2; done
              echo "waiting for database ${PGDATABASE}"
              until psql -lXqAt |cut -d'|' -f1 |grep -qw ${PGDATABASE}; do sleep 2; done
              #echo "waiting for database ${PGDATABASE} dbpatch message Database ready."
              #until psql -XqAtc "SELECT message FROM dbpatch WHERE message = 'Database ready.'" 2>/dev/null |grep -q 'Database ready.'; do
              #  sleep 2
              #done
          env:
            {{- include "omero.postgresql.environmentVariables" . | nindent 12 }}
          securityContext:
            {{- include "omero-server.securityContext" . | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- include "omero-server.volumes" . |nindent 8 }}
        - {name: logs, emptyDir: {}}
        - name: omero-data-dir
          persistentVolumeClaim:
            claimName: {{ include "omero-server.fullname" . }}-data
        - name: {{ include "omero-server.fullname" . }}-config
          configMap:
            name: {{ include "omero-server.fullname" . }}
