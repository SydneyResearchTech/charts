apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "omero-server.fullname" . }}
  labels:
    {{- include "omero-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "omero-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "omero-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "omero-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CONFIG_omero_db_host
              valueFrom:
                secretKeyRef:
                  name: {{ include "omero-server.fullname" . }}-db
                  key: PGHOST
            - name: CONFIG_omero_db_name
              valueFrom:
                secretKeyRef:
                  name: {{ include "omero-server.fullname" . }}-db
                  key: PGDATABASE
            - name: CONFIG_omero_db_pass
              valueFrom:
                secretKeyRef:
                  name: {{ include "omero-server.fullname" . }}-db
                  key: PGPASSWORD
            - name: CONFIG_omero_db_port
              valueFrom:
                secretKeyRef:
                  name: {{ include "omero-server.fullname" . }}-db
                  key: PGPORT
            - name: CONFIG_omero_db_user
              valueFrom:
                secretKeyRef:
                  name: {{ include "omero-server.fullname" . }}-db
                  key: PGUSER
            - name: OMERODIR
              value: {{ .Values.omeroDir }}
            - name: ROOTPASS
          ports:
            - name: ice-router
              containerPort: 4063
              protocol: TCP
            - name: ice-router-ssl
              containerPort: 4064
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: ice-router
          readinessProbe:
            tcpSocket:
              port: ice-router
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: {{.Values.omeroLoadDir}}/00kubernetes-configmap.omero
              name: {{ include "omero-server.fullname" . }}-config
              readOnly: true
              subPath: 00kubernetes-configmap.omero
            - mountPath: {{.Values.omero.data.dir|quote}}
              name: {{ include "omero-server.fullname" . }}-data-dir
            - mountPath: /tmp
              name: {{ include "omero-server.fullname" . }}-tempdir
            - mountPath: /omero/tmp
              name: {{ include "omero-server.fullname" . }}-tmp
            - mountPath: {{.Values.omeroDir}}/var
              name: {{ include "omero-server.fullname" . }}-var
            - mountPath: {{.Values.omeroDir}}/etc
              name: {{ include "omero-server.fullname" . }}-etc
      initContainers:
        - name: init-pg-isready
          image: postgres:latest
          command: ["sh","-c"]
          args:
            - |
              until env -u PGDATABASE -u PGUSER -u PGPASSWORD pg_isready; do
              sleep 2
              done
              psql -U postgres -w <<EOF
              DO $$
                BEGIN
                  BEGIN
                    CREATE USER $PGUSER WITH PASSWORD $PGPASSWORD NOCREATEDB;
                  EXCEPTION
                    WHEN duplicate_object THEN RAISE NOTICE '%, moving to next statement', SQLERRM USING ERRCODE = SQLSTATE;
                  END;
                  GRANT ALL PRIVILEGES ON DATABASE $PGDATABASE TO $PGUSER;
                END;
              $$;
              EOF
          env:
            {{- include "omero.postgresql.environmentVariables" . | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "omero-server.fullname" . }}-etc
          emptyDir: {}
        - name: {{ include "omero-server.fullname" . }}-tmp
          emptyDir: {}
        - name: {{ include "omero-server.fullname" . }}-var
          emptyDir: {}
        - name: {{ include "omero-server.fullname" . }}-tempdir
          emptyDir: {}
        - name: {{ include "omero-server.fullname" . }}-config
          configMap:
            name: {{ include "omero-server.fullname" . }}
        - name: {{ include "omero-server.fullname" . }}-secrets
          secret:
            secretName: {{ include "omero-server.fullname" . }}
        - name: {{ include "omero-server.fullname" . }}-data-dir
          emptyDir: {}
