{{- $lane_default := .Values.worker -}}
{{- $fullname := (include "cryosparc.fullname" .) -}}
{{- $labels := (include "cryosparc.labels" .) -}}
{{- $selectorLabels := (include "cryosparc.w.selectorLabels" .) -}}
{{- $serviceAccountName := (include "cryosparc.serviceAccountName" .) -}}
{{- $podSecurityContext := .Values.podSecurityContext -}}
{{- $securityContext := .Values.securityContext -}}
{{- $license_id := .Values.license_id -}}
{{- $base_port := .Values.base_port -}}
{{- $api := (include "cryosparc.api" .) -}}
{{- $volumes := (include "cryosparc.worker.volumes" .) -}}
{{- $volumeMounts := (include "cryosparc.worker.volumeMounts" .) -}}
{{- $ssh_secret := .Values.ssh_secret -}}

{{- range .Values.worker.lanes -}}
---
apiVersion: apps/v1
kind: {{ $lane_default.workload_resource }}
metadata:
  name: {{ $fullname }}w-{{ lower .lane }}
  labels:
    {{- $labels | nindent 4 }}
spec:
  {{- if and (not $lane_default.autoscaling.enabled) (not (eq $lane_default.workload_resource "DaemonSet")) }}
  replicas: {{ $lane_default.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- $selectorLabels | nindent 6 }}
  {{- if eq $lane_default.workload_resource "StatefulSet" }}
  serviceName: {{ $fullname }}w
  {{- end }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- $selectorLabels | nindent 8 }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ $serviceAccountName }}
      securityContext:
        {{- toYaml $podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $.Chart.Name }}-w
          securityContext:
            {{- toYaml $securityContext | nindent 12 }}
          image: "{{ $lane_default.image.repository }}:{{ $lane_default.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $lane_default.image.pullPolicy }}
          args: ["cryosparcw","connect"]
          env:
            - {name: CRYOSPARC_LICENSE_ID, value: {{ $license_id |quote }}}
            - {name: CRYOSPARC_PORT, value: {{ $base_port |quote }}}
            - name: CRYOSPARC_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - {name: CRYOSPARC_MASTER, value: {{ default (printf "%s%s" $fullname "m") .master |quote }}}
            - {name: CRYOSPARC_SSDPATH, value: {{ .ssd_path |default $lane_default.ssd_path  |quote }}}
            - {name: CRYOSPARC_UPDATE, value: {{ .update |default $lane_default.update |ternary "true" "" |quote }}}
            - {name: CRYOSPARC_SSHSTR, value: {{ .ssh_string |default $lane_default.ssh_string |quote }}}
            - {name: CRYOSPARC_CPUS, value: {{ include "cryosparc.w.cpus" (default $lane_default.cpus .cpus) |quote }}}
            - {name: CRYOSPARC_NOGPU, value: {{ .nogpu |default $lane_default.nogpu |ternary "true" "" |quote }}}
            - {name: CRYOSPARC_GPUS, value: {{ .gpus |default $lane_default.gpus |quote }}}
            - {name: CRYOSPARC_SSDQUOTA, value: {{ include "cryosparc.w.ssd_quota" (default $lane_default.ssd_quota .ssd_quota) |quote }}}
            - {name: CRYOSPARC_SSDRESERVE, value: {{ include "cryosparc.w.ssd_reserved" (default $lane_default.ssd_reserved .ssd_reserved) |quote }}}
            - {name: CRYOSPARC_LANE, value: {{ .lane |quote }}}
            - {name: CRYOSPARC_NEWLANE, value: {{ .new_lane |default $lane_default.new_lane |ternary "true" "" |quote }}}
          ports:
            - name: sshd
              containerPort: 2222
              {{- if eq $lane_default.workload_resource "DaemonSet" }}
              hostPort: 2222
              {{- else }}
              protocol: TCP
              {{- end }}
          livenessProbe:
            tcpSocket:
              port: sshd
          readinessProbe:
            tcpSocket:
              port: sshd
          resources:
            {{- toYaml (merge (default (dict) $.resources) $lane_default.resources) | nindent 12 }}
          volumeMounts:
            {{- $volumeMounts |nindent 12 }}
            - name: dropbear-etc
              mountPath: /etc/dropbear
            {{- range $.Values.volumes }}
            - mountPath: {{ .path }}
              name: {{ .name }}
            {{- end }}
      initContainers:
        - name: init
          securityContext:
            {{- toYaml $securityContext | nindent 12 }}
          image: alpine
          command: ["sh","-c"]
          args:
            - |
              HOME="/home/cryosparc"
              AUTHORIZED_KEYS="${HOME}/.ssh/authorized_keys"
              SSH_PUB="/k8s-secrets/ssh/id.pub"
              CRYOSPARC_API={{ $api |quote }}
              TIMEOUT=20
              echo 'cryosparc user setup'
              [ -d "${HOME}" ] || { mkdir -p "${HOME}"; chmod 0700 "${HOME}"; }
              [ -d "${HOME}/.ssh" ] || { mkdir -p "${HOME}/.ssh"; chmod 0700 "${HOME}/.ssh"; }
              [ -f "${AUTHORIZED_KEYS}" ] || { cat "${SSH_PUB}" >"${AUTHORIZED_KEYS}"; chmod 0400 "${AUTHORIZED_KEYS}"; }
          volumeMounts:
            - name: cryosparc-home
              mountPath: /home
            - name: secrets
              mountPath: /k8s-secrets
              readOnly: true
      nodeSelector:
        {{- toYaml (merge (default (dict) .nodeSelector) $lane_default.nodeSelector) | nindent 8 }}
      {{- with (default $lane_default.affinity .affinity) }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (default $lane_default.tolerations .tolerations) }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- $volumes |nindent 8 }}
        - name: dropbear-etc
          emptyDir:
            sizeLimit: 500Mi
        - name: secrets
          secret:
            secretName: {{ $ssh_secret.name }}
            items:
              - key: {{ $ssh_secret.keys.public }}
                path: ssh/id.pub
        {{- range $.Values.volumes }}
        {{- if (hasKey . "ephemeral") }}
        - name: {{ .name }}
          ephemeral:
            {{- toYaml .ephemeral | nindent 12 }}
        {{- else }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ default (printf "%s-%s" $.Release.Name .name) .persistentVolumeClaimName }}
        {{- end }}
        {{- end }}
  {{- if eq $lane_default.workload_resource "StatefulSet" }}
  volumeClaimTemplates: []
  {{- end }}
{{ end }}
