apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cryosparc.fullname" . }}-postinst
  labels:
    {{- include "cryosparc.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "cryosparc.fullname" . }}-postinst
      labels:
        {{- include "cryosparc.labels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: post-install-job
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.master.image.repository }}:{{ .Values.master.image.tag | default .Chart.AppVersion }}"
          env: [{name: CRYOSPARC_LICENSE_ID, value: {{ .Values.license_id |quote }}}]
          command: ["bash","-c"]
          args:
            - |
              eval $(cryosparcm env)
              UUID_PASSWORD=$(LC_ALL=C tr -dc A-Za-z0-9 </dev/urandom |head -c 64; echo)
              echo 'waiting for cryosparcm'
              until [[ {{ include "cryosparc.master.isready" . }} ]]; do sleep 2; done
              echo 'cryosparcm createuser'
              {{- with .Values.master.admin }}
              cryosparcm createuser \
                --email "{{ .email }}" \
                --password "${UUID_PASSWORD}" \
                --username "{{ .email }}" \
                --firstname "Admin" \
                --lastname "Account"
              {{- end }}
          volumeMounts:
            {{- include "cryosparc.master.volumeMounts" . |nindent 12 }}
      restartPolicy: Never
      volumes:
        {{- include "cryosparc.master.volumes" . |nindent 8 }}
