# Default values for cryosparcm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

users:
  - {email: 'admin@sydney.edu.au', username: 'admin', firstname: 'Admin', lastname: 'User', password: 'password'}
manage_users: false

license_id: ""
master_hostname: ""
base_port: "39000"

project_volumes:
  - mountPath: /cryosparc_projects
    storageClassName: ""
    volumeName: cryosparc-projects
    accessModes:
      - ReadWriteMany
    resources:
      requests: 1Gi

logs: [app,app_api,command_core,command_rtp,command_vis,database,supervisord]
mongodb:
  command: >
    mongod ${CRYOSPARC_DB_ENABLE_AUTH_FLAG}
    --dbpath "${CRYOSPARC_DB_PATH}"
    --port ${CRYOSPARC_MONGO_PORT}
    --oplogSize 64
    --replSet meteor ${CRYOSPARC_MONGO_EXTRA_FLAGS}
    --wiredTigerCacheSizeGB ${CRYOSPARC_MONGO_CACHE_GB}
    --bind_ip_all

command_core:
  command: python -c "import cryosparc_command.command_core as serv; serv.start(port=${CRYOSPARC_COMMAND_CORE_PORT})"
  service:
    type: ClusterIP
    port: 39002

command_vis:
  command: python -c "import cryosparc_command.command_vis as serv; serv.start(port=${CRYOSPARC_COMMAND_VIS_PORT})"

command_rtp:
  command: python -c "import cryosparc_command.command_rtp as serv; serv.start(port=${CRYOSPARC_COMMAND_RTP_PORT})"

ssh_secret:
  name: "cryosparc-user"
  key: "ssh-privatekey"

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 39000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
